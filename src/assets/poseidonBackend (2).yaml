openapi: 3.0.0
info:
  version: 1.0.0
  title: Poseidon Backend REST Service
  description: Service that allows communication between the Poseidon backend and Poseidon frontend to exchange information
externalDocs:
  description: Confluence Page
  url: https://confluence.smals.be/display/POSEIDON/Poseidon
servers:
  - url: http://localhost:8080/REST/poseidon/backend/v1
tags:
  - name: Usage Data
    description: Ingest customer usage data, providing the foundation for billing by capturing consumption details
  - name: Business Rules
    description: Management of charge models that transform raw usage data into cost components, enabling flexible billing logic
  - name: Cost Breakdown Tree
    description: Organize and manage cost components through a hierarchical structure, clarifying what is billed, for whom, and for what purpose
  - name: Invoice Lines
    description: Generate and manage the final invoice line items, consolidating all billing-relevant data into a bill-ready format for customers
  - name: Technical
    description: Handle configuration and maintenance tasks including translations, parameters, documentation, and REST endpoint monitoring

paths:
  /usages:
    get:
      tags:
        - "Usage Data"
      summary: Retrieve usages
      description: Endpoint that allows retrieving individual usage records, with support for filters such as subscription, batch, cost component, and timestamp, to facilitate granular analysis of consumption data.
      operationId: getUsages
      parameters:
        - name: externalSubscriptionId
          in: query
          description: Unique token generated by Poseidon, used by external systems to identify the subscription
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851'
        - name: sourceType
          in: query
          schema:
            description: This code will determine business rules that will be executed in poseidon. By convention use the cost component type, data usage type and version separated by -
            type: string
            pattern: '^[a-zA-Z0-9-_]+-[a-zA-Z0-9-_]+-[0-9.]+$'
            example: MON-MONITORING-1.13
        - name: invoiceLineReference
          in: query
          description: Retrieves the usage of an invoice line
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851'
        - name: batchReference
          in: query
          description: Filters results by usage batch reference
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851'
        - name: flowReference
          in: query
          description: Returns the usage data of a flow
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851'
        - name: costComponentReference
          in: query
          description: unique name to designate the cost component
          schema:
            type: string
            example: 'BAP-WS-INSPECTION_KNOWLEDGEMANAGEMENT-ACC'
        - name: status
          in: query
          description: Filters results by usage batch reference
          schema:
            $ref: '#/components/schemas/Status'
        - name: timestampFrom
          in: query
          description: Filter usage data by business timestamp starting from a specific date
          schema:
            type: string
        - name: timestampTo
          in: query
          description: Filter usage data by business timestamp up to a specific date
          schema:
            type: string
      security:
        - Oauth:
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Successfully retrieved the requested data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usages'
        '400':
          description: 'Invalid request: missing or incorrect parameters'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: No matching usage data found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /usages/{reference}:
    get:
      tags:
        - "Usage Data"
      summary: Retrieve usage data
      description: Endpoint that allows retrieving detailed information about a specific usage record, using a unique reference identifier for precise inspection or auditing purposes.
      operationId: getUsageData
      parameters:
        - name: reference
          in: path
          required: true
          description: reference received by the external source to identify the usage
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-000000001'
      security:
        - Oauth:
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Successfully retrieved the requested data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
        '400':
          description: 'Invalid request: missing or incorrect parameters'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: No matching usage data found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /usageBatches:
    get:
      tags:
        - "Usage Data"
      summary: List of usage batches
      description: Retrieve a list of usage batches, optionally filtered by source, cost component, creation date, or batch reference
      operationId: getBatches
      parameters:
        - name: sourceReference
          in: query
          description: Identifies the origin system or source for the usage batch
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-01'
        - name: sourceType
          in: query
          schema:
            description: This code will determine business rules that will be executed in poseidon. By convention use the cost component type, data usage type and version separated by -
            type: string
            pattern: '^[a-zA-Z0-9-_]+-[a-zA-Z0-9-_]+-[0-9.]+$'
            example: MON-MONITORING-1.13
        - name: costComponentReference
          in: query
          description: unique name to designate the cost component
          schema:
            type: string
            example: 'BAP-WS-INSPECTION_KNOWLEDGEMANAGEMENT-ACC'
        - name: createdFrom
          in: query
          description: Filter batches created on or after the specified date
          schema:
            type: string
            format: datetime
        - name: createdTo
          in: query
          description: Filter usage data by creation date up to this date (inclusive)
          schema:
            type: string
            format: datetime
      security:
        - Oauth:
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Successfully retrieved the requested data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageBatches'
        '404':
          description: No matching usage data found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /usageBatches/{reference}:
    get:
      tags:
        - "Usage Data"
      summary: List of usage batches
      description: Endpoint that allows retrieving a specific usage batch, identified by its unique reference. Provides visibility into the contents and metadata of a given usage batch.
      operationId: getBatch
      parameters:
        - name: reference
          in: path
          required: true
          description: The reference to the batch that contains the usage data to filter by
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
      security:
        - Oauth:
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Successfully retrieved the requested data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageBatch'
        '404':
          description: No matching usage data found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /costNodes:
    get:
      tags:
        - "Cost Breakdown Tree"
      summary: Retrieve cost nodes
      description: Retrieve cost nodes from the cost breakdown tree using filters such as parent node, responsible users, or billing code.
      operationId: findNode
      parameters:
        - name: activeOn
          in: query
          description: Version date of the cost node. Defaults to the latest version if not provided
          schema:
            type: string
            format: date-time
        - name: parentNodeReference
          in: query
          description: Reference of the parent node in the cost breakdown hierarchy
          schema:
            type: string
            example: "FAMIWAL-STORAGE"
        - name: customerId
          in: query
          description: 'the reference to the customer'
          schema:
            type: string
        - name: billingCodeConsumer
          in: query
          description: Unique billing code assigned to the consumer
          schema:
            $ref: '#/components/schemas/ClientCode'
        - name: serviceManagerReference
          in: query
          description: CSM responsible for this cost node
          schema:
            $ref: '#/components/schemas/Responsible'
        - name: accountManagerReference
          in: query
          description: Responsible to maintain this cost node
          schema:
            $ref: '#/components/schemas/Responsible'
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Successfully retrieved the requested data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostNodes'
        '400':
          description: Invalid request. Required input data is missing or incorrect
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: No matching cost node(s) found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /costNodes/{reference}:
    get:
      tags:
        - "Cost Breakdown Tree"
      summary: Retrieve a specific cost node
      description: Fetch the details of a cost node by its unique reference identifier
      operationId: getNode
      parameters:
        - name: reference
          in: path
          required: true
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851'
        - name: activeOn
          in: query
          description: 'Date of the Rule. If not provided, default to the most recent version'
          schema:
            type: string
            format: date-time
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Successfully retrieved the requested data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostNode'
        '400':
          description: Invalid request. Required input data is missing or incorrect
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: No matching cost node(s) found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    patch:
      tags:
        - "Cost Breakdown Tree"
      summary: Update cost node hierarchy
      description: Modify the position or attributes of a cost node within the cost breakdown hierarchy
      operationId: updateHierarchy
      parameters:
        - name: reference
          in: path
          required: true
          description: Reference of the node in the cost breakdown hierarchy
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostNode'
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '204':
          description: Operation successful; no content returned
        "400":
          description: Invalid request. Required input data is missing or incorrect
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: No matching cost node(s) found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
        - "Cost Breakdown Tree"
      summary: Replace a cost node
      description: Fully replace the specified cost node with a new structure, including all associated metadata
      operationId: replaceNode
      parameters:
        - name: reference
          in: path
          required: true
          description: Reference of the node to be replaced
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostNode'
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Successfully retrieved the requested data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostNode'
        '400':
          description: Invalid request. Required input data is missing or incorrect
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: No matching cost node(s) found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      tags:
        - "Cost Breakdown Tree"
      summary: Remove a cost node
      description: Permanently delete a cost node from the cost breakdown tree by its reference
      operationId: deleteNode
      parameters:
        - name: reference
          in: path
          required: true
          description: Reference of the node to be deleted
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '204':
          description: Operation successful; no content returned
        '400':
          description: Invalid request. Required input data is missing or incorrect
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: No matching cost node(s) found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /costNodes/{reference}/tree:
    get:
      tags:
        - "Cost Breakdown Tree"
      summary: Retrieve full cost breakdown tree
      description: Fetch the hierarchical structure of the cost breakdown tree, including all linked nodes and cost components, for a given output reference
      operationId: getHierarchy
      parameters:
        - name: reference
          in: path
          required: true
          description: Reference of the node to be deleted
          schema:
            type: string
            example: "3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000"
        - name: activeOn
          in: query
          description: Version date of the cost breakdown tree. Defaults to the latest version if not specified
          schema:
            type: string
            format: date-time
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Successfully retrieved the requested data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostNodes'
        '400':
          description: Invalid request. Required input data is missing or incorrect
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: No matching cost node(s) found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /costAllocations:
    get:
      tags:
        - "Cost Breakdown Tree"
      summary: Retrieve cost allocation mappings
      description: Fetch a list of cost allocation definitions based on optional filters such as cost component reference and status
      operationId: getCostAllocation
      parameters:
        - name: costComponentReference
          description: Reference of the cost component linked to the allocation
          in: query
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
        - name: costNodeReference
          description: Reference of the first costNode to get all the allocations from (in general used in combination with tree of cost nodes)
          in: query
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
        - name: activeOn
          description: 'Date of the cost breakdown tree. If not provided, default to the most recent version'
          in: query
          schema:
            type: string
            format: date-time
        - name: status
          description: Status of the allocation (e.g., active, draft, archived)
          in: query
          schema:
            $ref: "#/components/schemas/Status"
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Successfully retrieved list of cost allocation definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostAllocations'
        '500':
          description: Internal server error occurred while retrieving cost allocations
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: An unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    patch:
      tags:
        - "Cost Breakdown Tree"
      summary: Update cost component status
      description: Update status of a cost allocation by confirming of unconfirming it's state
      operationId: patchCostComponent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostAllocation'
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '204':
          description: Allocation successfully created or updated
        '404':
          description: Target cost node or component for allocation not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: An unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /costAllocations/assign:
    post:
      tags:
        - "Cost Breakdown Tree"
      summary: Assign cost component to allocation node
      description: Create or update a cost allocation rule by linking a cost component reference to a specific cost breakdown node
      operationId: allocateCostComponent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostAllocation'
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '204':
          description: Allocation successfully created or updated
        '404':
          description: Target cost node or component for allocation not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: An unexpected error occurred
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /flows:
    get:
      tags:
        - "Business Rules"
      description: linked events that each apply a specific rule
      operationId: getFlows
      parameters:
        - name: activeOn
          in: query
          description: 'Date of the flow. If not provided, default to the most recent version'
          schema:
            type: string
            format: date-time
        - name: sourceType
          in: query
          schema:
            description: This code will determine business rules that will be executed in poseidon. By convention use the cost component type, data usage type and version separated by -
            type: string
            pattern: '^[a-zA-Z0-9_-]+-[0-9.]+$'
            example: MON-MONITORING-1.13
        - name: status
          in: query
          schema:
            $ref: "#/components/schemas/Status"
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Get list of flows without content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flows'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
        - "Business Rules"
      summary: Create a new flow definition
      operationId: postFlow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Flow"
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '201':
          description: Flow definition created successfully
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
        - "Business Rules"
      summary: Update a flow definition
      operationId: putFlow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Flow"
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '204':
          description: Flow definition updated successfully
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /flows/{reference}:
    get:
      tags:
        - "Business Rules"
      summary: Retrieve a flow definition
      operationId: getFlow
      parameters:
        - name: reference
          in: path
          required: true
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
        - name: usageReference
          in: query
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
        - name: activeOn
          in: query
          description: 'Date of the Rule. If not provided, default to the most recent version'
          schema:
            type: string
            format: date-time
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Get list of flows without content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /rules:
    get:
      tags:
        - "Business Rules"
      summary: Retrieves the business rules of Poseidon
      operationId: getRules
      parameters:
        - name: type
          in: query
          schema:
            type: string
        - name: activeOn
          in: query
          description: 'Date of the Rule. If not provided, default to the most recent version'
          schema:
            type: string
            format: date-time
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Get list of business rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rules'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
        - "Business Rules"
      summary: Update a business rule definition
      operationId: putRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rule"
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '204':
          description: Flow definition updated successfully
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
        - "Business Rules"
      summary: Create a new rule definition
      operationId: postRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rule"
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '201':
          description: Flow definition created successfully
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /rules/{reference}:
    get:
      tags:
        - "Business Rules"
      summary: Retrieves a business rule of Poseidon
      operationId: getRule
      parameters:
        - name: reference
          in: path
          required: true
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
        - name: activeOn
          in: query
          description: 'Date of the Rule. If not provided, default to the most recent version'
          schema:
            type: string
            format: date-time
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: Get list of business rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /invoiceLines:
    get:
      tags:
        - "Invoice Lines"
      summary: List all invoice lines
      description: Retrieving a list of all the invoice lines for a specific Output Reference (by default, the current month) to the REST endpoint
      operationId: getInvoiceLines
      parameters:
        - name: outputReference
          in: query
          description: the reference Output Reference (month where the billing has been done)
          schema:
            type: string
        - name: environment
          in: query
          schema:
            type: string
        - name: sourceType
          in: query
          schema:
            description: This code will determine business rules that will be executed in poseidon. By convention use the cost component type, data usage type and version separated by -
            type: string
            pattern: '^[a-zA-Z0-9_-]+-[0-9.]+$'
            example: MON-MONITORING-1.13
        - name: costComponentReference
          in: query
          description: Filter usage data by Cost Component
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
        - name: customerId
          in: query
          description: Filter usage data by ClientId
          schema:
            $ref: '#/components/schemas/ClientCode'
        - name: activeOn
          in: query
          description: 'Date of the InvoiceLine. If not provided, default to the most recent version'
          schema:
            type: string
            format: date-time
        - name: productionResource
          in: query
          description: Filter usage data by means of production
          schema:
            type: string
        - name: billingCodeConsumer
          in: query
          description: Filter usage data by imputation codes
          schema:
            $ref: '#/components/schemas/ClientCode'
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceLines'
        '400':
          description: at least one parameter required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /invoiceLines/{reference}:
    get:
      tags:
        - "Invoice Lines"
      summary: List all invoice lines
      description: Retrieving a list of all the invoice lines for a specific Output Reference (by default, the current month) to the REST endpoint
      operationId: getInvoiceLine
      parameters:
        - name: reference
          in: path
          required: true
          description: the reference invoice line
          schema:
            type: string
            example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-4546'
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceLine'
        '400':
          description: at least one parameter required
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: invoiceLines not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /outputs/{reference}/close:
    post:
      tags:
        - "Invoice Lines"
      summary: Closes the Output Reference and saves the business rules definitions
      description: Action that saves the business rules definition and closes the specified open Output Reference
      operationId: closeOutputReference
      parameters:
        - name: reference
          in: path
          description: the Output batch (month where the billing has been done)
          required: true
          schema:
            type: string
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '204':
          description: successful with no content
        '400':
          description: Invalid outputReference or action
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: outputReference not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /outputs/{reference}/delete:
    delete:
      tags:
        - "Invoice Lines"
      summary: Deletes the outputReference
      description: Action that deletes the outputReference and it's invoice lines
      operationId: deleteOutputReference
      parameters:
        - name: reference
          in: path
          description: the outputReference (month where the billing has been done)
          required: true
          schema:
            type: string
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-admin
      x-oauth2-required-scopes: any
      responses:
        '204':
          description: successful with no content
        '400':
          description: Invalid outputReference or action
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: outputReference not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /user:
    get:
      summary: Get user profile
      description: Get the user profile from the backend
      operationId: getUser
      tags:
        - "Technical"
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-monitoring
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /parameters/{pkey}:
    get:
      summary: Get parameters
      description: Get parameter value for a specific key
      operationId: getParametersByPKey
      tags:
        - "Technical"
      parameters:
        - name: pkey
          in: path
          description: The key linked of parameter key-value pair
          required: true
          schema:
            type: string
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-monitoring
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /translations/{language}:
    get:
      tags:
        - "Technical"
      summary: Get Translations
      description: Get translations for a specific language
      operationId: getTranslationsByLanguage
      parameters:
        - name: language
          in: path
          description: The language for which to get the translations
          required: true
          schema:
            type: string
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-monitoring
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /version:
    get:
      tags:
        - "Technical"
      summary: Get backend version
      description: Get Poseidon backend version
      operationId: getVersion
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-monitoring
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                description: "Version format: X.Y.Z"
                type: string
                pattern: "^[0-9]+\\.[0-9]+\\.[0-9]+$"
                example: "1.2.3"
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /doc/openapi.yaml:
    get:
      tags:
        - "Technical"
      description: Endpoint that allows retrieving the full API documentation, in OpenAPI (Swagger) YAML format, for integration, tooling, or development purposes.
      operationId: getSwagger
      parameters: [ ]
      security:
        - Oauth:
            - scope:sma-idp-poseidon-responsible
            - scope:sma-idp-poseidon-monitoring
            - scope:sma-idp-poseidon-admin
            - scope:sma-idp-poseidon-consult
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: successful operation
          content:
            application/yaml:
              schema:
                type: string
                format: binary
        default:
          description: Default
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  
  /health:
    get:
      tags:
        - "Technical"
      summary: "Check health of this REST API"
      description: Endpoint that allows checking the operational health of the API, used by monitoring or supervision systems to verify availability and responsiveness.
      operationId: "healthCheck"
      parameters:
        - name: "type"
          in: "query"
          description: "Defines which sanity checks must be run"
          schema:
            type: string
      security:
        - Oauth:
            - scope:sma-idp-poseidon-monitoring
      x-oauth2-required-scopes: any
      responses:
        '200':
          description: The service is UP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        default:
          description: Problem with health check
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

components:
  schemas:
    
    Responsible:
      description: a user reference
      type: string
      example: "02641"
    
    UserProfile:
      description: User profile object containing basic identity and role information
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        familyName:
          type: string
        givenName:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
              - monitoring
              - consult
              - responsible
              - admin
          example: [ consult ]
      additionalProperties: true
    
    ClientCode:
      description: Imputatie code specific to each client of Smals. 0-10, intern, rest is voorbehouden voor externe klanten
      type: string
      pattern: '^\d{7}$' # Only allows exactly 7 positions
      example: "0503534"
    
    EuroCentPositiveAmount:
      description: Money amount in Euro cents >= 0
      type: integer # representation as Euro cent instead of Euro to avoid floating point rounding problems and need for custom 'number' format
      minimum: 0
    
    Status:
      description: Status
      type: string
      enum:
        - active
        - inactive
        - draft
        - pending
        - processed
        - failed
        - completed
    
    HealthStatus:
      description: Response message for the API health
      type: object
      properties:
        status:
          $ref: "#/components/schemas/HealthLevel"
        details:
          type: object
    
    HealthLevel:
      description: Level indicating the health status of the service
      type: string
      x-ignore-rules:
        cod-design: Exempt existing code from lowerCamelCase rule
        #"rule identifier": "motivation for ignoring the rule"  (rule identifier can be found in violation error message)
      enum:
        - UP # is functioning as expected
        - DEGRADED # is partly unavailable but service can be continued with reduced functionality
        - DOWN # is suffering unexpected failures
    
    TechnicalFields:
      type: object
      properties:
        creationDate:
          type: string
          format: datetime
        version:
          description: "Version of the referenced entity"
          type: string
          example: "1.2.3"
    
    Inheritance:
      type: object
      description: If inherited is false, it means that the value is the base one, else the value is from the parent
      properties:
        value:
          type: string
        inherited:
          type: boolean
    
    Usage:
      description: Information about clients consumption
      type: object
      properties:
        reference:
          description: a reference composed of letters and digits, referencing an external key or user input
          type: string
          pattern: '^[a-zA-Z0-9-_]+$'
          example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-000000001'
        batchReference:
          description: Parent usageBatch from which the usage came
          readOnly: true
          type: string
          pattern: '^[a-zA-Z0-9-_]+$'
          example: '3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000'
        sourceType:
          readOnly: true
          description: This code will determine business rules that will be executed in poseidon. By convention use the cost component type, data usage type and version separated by -
          type: string
          pattern: '^[a-zA-Z0-9_-]+-[0-9.]+$'
          example: MON-MONITORING-1.13
        businessTimestamp:
          type: string
          format: datetime
        extractionTimestamp:
          description: Time where usage data arrived at rest endpoint
          readOnly: true
          type: string
          format: datetime
        costComponentReference:
          description: Reference to the cost component
          type: string
          example: "BAP-DATAACCESSTRACING-PROCESSING"
        content:
          type: object
          description: content of the source type
          additionalProperties:
            type: object
        technicalFields:
          allOf:
            - readOnly: true
            - $ref: '#/components/schemas/TechnicalFields'
        processingMessage:
          type: object
          description: Tracing feedback if present in execution
          additionalProperties:
            type: object
    
    Usages:
      type: object
      description: List of Usage
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
    
    UsageBatch:
      type: object
      description: A collection of billing data entries. If you need to split a set of data in several batches, use the same sourceReference, sourceType and extractionTimestamp but a different reference.
      properties:
        reference:
          description: The reference identifies the usage batch that has been sent. If this reference matches an existing batch, all data associated with that specific reference (including the UsageBatch entry, Usage records, and any derived InvoiceLines) will be deleted and replaced by the new submission. Use a unique reference for each distinct batch.
          type: string
          example: "3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000"
        sourceReference:
          description: The content to the source of the usage batch that has been made
          type: string
          example: "3e93da13-cdfc-48f9-9b1e-3682af8fb851"
        sourceType:
          description: This code will determine business rules that will be executed in poseidon. By convention use the cost component type, data usage type and version separated by -
          type: string
          pattern: '^[a-zA-Z0-9_-]+-[0-9.]+$'
          example: MON-MONITORING-1.13
        extractionTimestamp:
          type: string
          format: datetime
        executionStatus:
          description: The status of a potential execution of the batch
          type: string
          example: "ACTIVE"
        processingMessage:
          type: object
          description: A standardized error code, an explicit reference to the relevant data, and a contextualized description of the error.
          additionalProperties:
            type: object
        numberOfUsages:
          type: integer
        technicalFields:
          allOf:
            - readOnly: true
            - $ref: '#/components/schemas/TechnicalFields'
      required:
        - reference
    
    UsageBatches:
      type: object
      description: List of UsageBatch
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/UsageBatch'
    
    CostNode:
      type: object
      description: Hierarchy of various client projects, represented by nodes, containing other sub-nodes and groups of cost components attached to each
      properties:
        reference:
          type: string
          example: "FAMIWAL"
        parentNodeReference:
          type: string
          description: "Identifier of the parent node. Can be null if the node is a root element."
        rootNodeReference:
          type: string
          description: "Identifier of the root node. Representing the client's node"
        name:
          type: string
        billingCodeConsumer:
          $ref: '#/components/schemas/Inheritance'
        customerId:
          $ref: '#/components/schemas/Inheritance'
        customerName:
          $ref: '#/components/schemas/Inheritance'
        accountManagerReference:
          $ref: '#/components/schemas/Inheritance'
        serviceManagerReference:
          $ref: '#/components/schemas/Inheritance'
        tenantReference:
          $ref: '#/components/schemas/Inheritance'
        description:
          description: the description of the chose rule
          type: string
        validFrom:
          type: string
          format: datetime
        validTo:
          type: string
          format: datetime
        isCurrent:
          type: boolean
        versioningComment:
          readOnly: true
          type: string
        technicalFields:
          allOf:
            - readOnly: true
            - $ref: '#/components/schemas/TechnicalFields'
      required:
        - reference
    
    CostNodes:
      type: object
      description: List of CostNode
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CostNode'
    
    Flow:
      type: object
      properties:
        reference:
          type: string
          example: "3e93da13-cdfc-48f9-9b1e-3682af8fb851"
        sourceType:
          description: This code will determine business rules that will be executed in poseidon. By convention use the cost component type, data usage type and version separated by -
          type: string
          pattern: '^[a-zA-Z0-9_-]+-[0-9.]+$'
          example: MON-MONITORING-1.13
        description:
          description: the description of the chose rule
          type: string
        userComment:
          description: userComment
          type: string
        content:
          type: object
          description: content of the source type
          additionalProperties:
            type: object
        validFrom:
          type: string
          format: datetime
        validTo:
          type: string
          format: datetime
        isCurrent:
          type: boolean
        versioningComment:
          readOnly: true
          description: "Additional comment when versioning"
          type: string
        technicalFields:
          allOf:
            - readOnly: true
            - $ref: '#/components/schemas/TechnicalFields'
    
    Flows:
      type: object
      description: List of Flow
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Flow'
    
    Rule:
      type: object
      properties:
        reference:
          type: string
          example: "3e93da13-cdfc-48f9-9b1e-3682af8fb851"
        type:
          description: the type of the chose rule
          type: string
          example: enrich
        category:
          description: tag to organise the steps during where specific rules are applied
          type: string
          example: step 1 - dictionary
        description:
          type: string
        userComment:
          type: string
        content:
          type: object
          description: content of the source type
          additionalProperties:
            type: object
        validFrom:
          type: string
          format: datetime
        validTo:
          type: string
          format: datetime
        isCurrent:
          type: boolean
        versioningComment:
          readOnly: true
          description: Additional comment when versioning
          type: string
        technicalFields:
          allOf:
            - readOnly: true
            - $ref: '#/components/schemas/TechnicalFields'
    
    Rules:
      type: object
      description: List of Rule
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
    
    CostAllocation:
      type: object
      description: A rule for allocating a cost breakdown node to an invoice line
      properties:
        costNodeReference:
          type: string
          example: "FAMIWAL"
        costComponentReference:
          type: string
          example: "BAP-DATAACCESSTRACING-PROCESSING"
        costComponentName:
          type: string
        costComponentType:
          type: string
        costComponentStatus:
          type: string
        costComponentFunction:
          type: string
        costComponentEnvironment:
          type: string
        sourceType:
          description: This code will determine business rules that will be executed in poseidon. By convention use the cost component type, data usage type and version separated by -
          type: string
          pattern: '^[a-zA-Z0-9_-]+-[0-9.]+$'
          example: MON-MONITORING-1.13
        status:
          readOnly: true
          type: string
          description: Status of usageBatch
          enum:
            - active
            - inactive
            - draft
            - pending
            - processed
            - failed
            - completed
          example: "active"
        anomalies:
          type: string
        description:
          readOnly: true
          description: Comment, note or description regarding the cost allocation
          type: string
        validFrom:
          type: string
          format: datetime
        validTo:
          type: string
          format: datetime
        isCurrent:
          type: boolean
        versioningComment:
          readOnly: true
          description: Additional comment when versioning
          type: string
        technicalFields:
          allOf:
            - readOnly: true
            - $ref: '#/components/schemas/TechnicalFields'
      required:
        - costComponentReference
        - costNodeReference
    
    CostAllocations:
      type: object
      description: List of CostAllocation
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CostAllocation'
    
    InvoiceLine:
      description: Contains the business rules for grouping different cost components
      type: object
      properties:
        reference:
          type: string
          example: "3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000"
        batchReference:
          type: string
          example: "3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000"
        providerOrgUnit:
          description: Name of the section providing the service
          type: string
          example: Processus Internes
        extractionTimestamp:
          type: string
          format: datetime
        businessTimestamp:
          type: string
          format: datetime
        billingCodeProvider:
          $ref: '#/components/schemas/ClientCode'
        billingCodeConsumer:
          $ref: '#/components/schemas/ClientCode'
        productReference:
          type: string
        productionResource:
          type: string
          example: "BAP-SS-MON"
        quantity:
          type: number
          format: double
          example: 1.5
        unitCost:
          type: number
          format: double
        totalCost:
          $ref: '#/components/schemas/EuroCentPositiveAmount'
        costComponentReference:
          type: string
          example: 'BAP-WS-INSPECTION_KNOWLEDGEMANAGEMENT-ACC'
        costComponentName:
          type: string
          example: "TODO"
        sourceType:
          description: This code will determine business rules that will be executed in poseidon. By convention use the cost component type, data usage type and version separated by -
          type: string
          pattern: '^[a-zA-Z0-9_-]+-[0-9.]+$'
          example: MON-MONITORING-1.13
        description:
          type: string
          example: "FogLight: Websmals WebSite (Prod)"
        technicalDescription:
          type: string
          example: "BAP-DRUPAL-WEBSMALS Drupal WebSmals (Production)"
        financeComment:
          type: string
        environment:
          type: string
          example: "PROD"
        anomalies:
          type: string
        metadata:
          type: object
          description: metadata
          additionalProperties:
            type: object
        function:
          type: string
        customerId:
          type: string
          example: '050'
        customerName:
          type: string
          example: "ONSS"
        invoicingCycleId:
          type: string
          example: '02-2025'
        billingItemType: # enum ?
          type: string
          example: 'STORAGE'
        lineVersionNo:
          type: integer
          example: 12
        isActive:
          type: boolean
          example: true
        billingCodeId:
          type: string
        billingCodeDescription:
          type: string
        productName:
          type: string
          example: 'Salmon'
        productGroup:
          type: string
          example: 'Facturation'
        productDomain:
          type: string
          example: 'Facturation'
        productId:
          type: string
        manualModifiedByUserId:
          $ref: '#/components/schemas/Responsible'
        justification:
          type: string
          example: "this is why we changed it"
        processingMessage:
          readOnly: true
          description: "Additional comment or note regarding the node"
          type: string
        flowReference:
          type: string
          example: "3e93da13-cdfc-48f9-9b1e-3682af8fb851-0000"
        outputReference:
          type: string
          example: "02-2025"
        costComponentType:
          type: string
          example: "BAP-DATAACCESSTRACING-PROCESSING"
        validFrom:
          type: string
          format: datetime
        validTo:
          type: string
          format: datetime
        isCurrent:
          type: boolean
        versioningComment:
          readOnly: true
          description: Additional comment when versioning
          type: string
        technicalFields:
          allOf:
            - readOnly: true
            - $ref: '#/components/schemas/TechnicalFields'
    
    InvoiceLines:
      type: object
      description: List of InvoiceLine
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLine'
    
    Problem:
      description: A Problem Details object (RFC 7807)
      type: object
      properties:
        type:
          type: string
          format: uri
          description: >
            A URI reference that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).
          default: "about:blank"
        href:
          type: string
          format: uri
          description: >
            An absolute URI that, when dereferenced, provides human-readable documentation for the problem type.
        title:
          type: string
          description: >
            A short summary of the problem type. Written in English and readable for engineers
            (usually not suited for non-technical stakeholders and not localized).
        status:
          type: integer
          format: int32
          description: >
            The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 400
          maximum: 599
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: >
            A URI reference that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
      example:
        type: "urn:problem-type:payloadTooLarge"
        href: "http://poseidon.internal.smals.be/specification/rest/api-guide/problems/payloadTooLarge.html"
        title: "Payload Too Large"
        status: 400
        detail: "Request message must not be larger than 10 MB. If you need to split a set of data in several batches, use the same sourceReference, sourceType and extractionTimestamp but a different reference"
        instance: "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
        limit: 10485760  # Additional properties specific to the problem type are allowed
  
  securitySchemes:
    Oauth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://oauth-v5.socialsecurity.be/oauth2/authorize'
          scopes:
            'scope:sma-idp-poseidon-monitoring': monitoring scope
            'scope:sma-idp-poseidon-consult': consult scope
            'scope:sma-idp-poseidon-responsible': responsible scope
            'scope:sma-idp-poseidon-admin': admin scope